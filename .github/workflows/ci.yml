name: CI / Build & Publish to ACR

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build_test_and_publish:
    runs-on: ubuntu-latest
    env:
      # Short name of your ACR (e.g. 'myregistry')
      ACR_NAME: ${{ secrets.ACR_NAME }}
      # Full login server for tagging
      IMAGE_NAME: ${{ secrets.ACR_NAME }}.azurecr.io/imageapi

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Run tests
        run: dotnet test --no-build --verbosity normal

      - name: Login to Azure
        uses: azure/login@v1
        with:
          # JSON service principal you stored in GitHub as AZURE_CREDENTIALS
          client-id: ${{ secrets.AZURE_CLIENT_ID}}
          tenant-id: ${{secrets.AZURE_TENANT_ID}}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID}}

      - name: ACR Login
        run: az acr login --name ${{ secrets.ACR_NAME }}

      - name: Build and push Docker image to ACR
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ImageApi/Dockerfile
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ github.sha }}

      # Optionally, add a deployment step here, e.g. helm upgrade or kubectl apply
